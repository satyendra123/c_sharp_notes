#step-1 it will connect with the com port 10. and when i click on the led on btton then it will send N in arduino i will receive this and control the led. and when i click on the led off button then it will send F in arduino  will rec
using System;
using System.IO.Ports;
using System.Windows.Forms;

namespace arduinocomport
{
    public partial class Form1 : Form
    {
        private SerialPort? myport; // Marked as nullable

        public Form1()
        {
            InitializeComponent();
            init();
        }

        private void init()
        {
            try
            {
                myport = new SerialPort
                {
                    BaudRate = 9600,
                    PortName = "COM10"
                };
                myport.Open();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error: {ex.Message}");
            }
            ledon.Enabled = true;
            ledoff.Enabled = false; // Initially off
        }

        private void ledon_Click(object sender, EventArgs e)
        {
            if (myport != null && myport.IsOpen)
            {
                myport.WriteLine("N");
                ledon.Enabled = false;
                ledoff.Enabled = true;
            }
        }

        private void ledoff_Click(object sender, EventArgs e)
        {
            if (myport != null && myport.IsOpen)
            {
                myport.WriteLine("F");
                ledon.Enabled = true;
                ledoff.Enabled = false;
            }
        }

        protected override void OnFormClosing(FormClosingEventArgs e)
        {
            if (myport != null && myport.IsOpen)
            {
                myport.Close();
            }
            base.OnFormClosing(e);
        }
    }
}

#EX-2
using System;
using System.IO.Ports;
using System.Linq;
using System.Windows.Forms;

namespace FormsArduinoSerial
{
    public partial class Form1 : Form
    {
        SerialPort port;

        public Form1()
        {
            InitializeComponent();
            this.FormClosed += new FormClosedEventHandler(Form1_FormClosed);
            InitializeSerialPort();
        }

        private void InitializeSerialPort()
        {
            try
            {
                port = new SerialPort("COM9", 9600); // Set your board COM
                port.Open();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error opening port: {ex.Message}");
            }
        }

        void Form1_FormClosed(object sender, FormClosedEventArgs e)
        {
            if (port != null && port.IsOpen)
            {
                port.Close();
                port.Dispose();
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            PortWrite("r");
            ShowContentUI(ReadSerial());
        }

        private void button2_Click(object sender, EventArgs e)
        {
            PortWrite("y");
            ShowContentUI(ReadSerial());
        }

        private void PortWrite(string message)
        {
            if (port != null && port.IsOpen)
            {
                try
                {
                    port.Write(message);
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Error writing to port: {ex.Message}");
                }
            }
        }

        private void ShowContentUI(string textToShow)
        {
            textBox1.Text = textToShow;
        }

        public string ReadSerial()
        {
            string stringSerial = "";
            try
            {
                stringSerial = port.ReadLine(); // Read line if Arduino sends data line by line
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error reading from port: {ex.Message}");
            }

            return stringSerial;
        }
    }
}
