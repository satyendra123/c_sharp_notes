#server code
using System;
using System.Net;
using System.Net.Sockets;

namespace tcpipserver
{
    class Program
    {
        static void Main()
        {
            TcpListener server = new TcpListener(IPAddress.Any, 8888);
            server.Start();
            Console.WriteLine("Server started");
            Console.WriteLine("Waiting for the client to connect");
            Socket client = server.AcceptSocket();
            while(client.Connected)
            {
                // send message to the client
                Console.WriteLine("client Connected");
                NetworkStream ns = new NetworkStream(client);
                StreamWriter sw = new StreamWriter(ns);
                sw.WriteLine("server >> Welcome client");
                sw.WriteLine("hello client");
                sw.Flush();
                // Get message from the client
                StreamReader sr = new StreamReader(ns);
                Console.WriteLine("client >>" + sr.ReadLine());
                sw.Close();
                ns.Close();
            }

            client.Close();
        }
    }
}

#client code
using System;
using System.Net;
using System.Net.Sockets;
using System.Windows.Forms;

namespace tcpipclientlikehercules
{
    public partial class Form1 : Form
    {
        TcpClient client = null;
        public Form1()
        {
            InitializeComponent();
        }

        private void btnConnect_Click(object sender, EventArgs e)
        {
            if (btnConnect.Text == "Disconnect")
            {
                if (client != null)
                {
                    client.Close();
                    client = null;
                    MessageBox.Show("Disconnected from the server", "Disconnected", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    btnConnect.Text = "Connect";
                    txtServerMessage.Text = "Disconnected.";
                }
                return;
            }

            string ipAddress = txtIpAddress.Text;
            int port = int.Parse(txtPort.Text);

            try
            {
                client = new TcpClient(ipAddress, port);
                NetworkStream ns = client.GetStream();
                StreamReader sr = new StreamReader(ns);
                btnConnect.Text = "Disconnect";
                txtServerMessage.Text = "Server >> " + sr.ReadLine();
                MessageBox.Show("Connected to the server", "Connected", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message, "Connection Failed", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void SendData_Click(object sender, EventArgs e)
        {
            if (client != null && client.Connected)
            {
                if (!string.IsNullOrWhiteSpace(Txt1Message.Text))
                {
                    NetworkStream ns = client.GetStream();
                    StreamWriter sw = new StreamWriter(ns);
                    sw.WriteLine(Txt1Message.Text);
                    sw.Flush();
                    txtServerMessage.AppendText("You >> " + Txt1Message.Text + Environment.NewLine);
                }
            }
            else
            {
                MessageBox.Show("Please connect to the server first", "Error", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }

        }
    }
}
